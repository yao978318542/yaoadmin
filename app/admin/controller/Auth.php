<?php
/**
 *  Created by www.kuleiman.com.
 *  User: YaoHongQiang
 *  Date: 2021/4/22   11:20
 *  description:
 */

namespace app\admin\controller;


use app\admin\AdminBase;
use think\facade\View;
use think\facade\Db;

use app\admin\model\Auth as AuthModel;

class Auth extends AdminBase
{

    protected $AuthModel;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->AuthModel=new AuthModel();
    }
    function index(){
        return View::fetch();
    }
    function list(){
        $type=input("post.type/s","");
        $keyword=input("post.keyword/s","");
        $status=input("post.status/d",0);
        $retutn_type=0;
        if($keyword||$status>0){
            $retutn_type=1;
        }
        $list=$this->AuthModel->auth_list($type,$keyword,$status,$retutn_type);
        return $this->success('',["list"=>$list]);
    }
    function info(){
        $id=input("post.id/d","");
        $info=Db::name("auth_rule")->where(["id"=>$id])->find();
        if(!empty($info)){
            return $this->success('',["info"=>$info]);
        }else{
            return $this->error("11000","菜单信息错误");
        }
    }
    /**
     * 添加/修改规则
     * @return bool|\think\response\Json
     */
    function add(){
        $id=input("post.id/d","");
        $title=input("post.title/s","");
        $type=input("post.type/d","");
        $parent_id=input("post.parent_id/d","");
        $icon=input("post.icon/s","");
        $name=input("post.name/s","");
        $status=input("post.status/d",0);
        $is_show=input("post.is_show/d",0);
        $sort=input("post.sort/d",0);
        $res_validate = $this->validateList(input(), 'Auth.AuthAdd');
        if ($res_validate !== true) {
            return $res_validate;
        }else{
            $save_data=[
                "title"=>$title,
                "type"=>$type,
                "parent_id"=>$parent_id,
                "icon"=>$icon,
                "name"=>$name,
                "status"=>$status,
                "is_show"=>$is_show,
                "sort"=>$sort,
            ];
            if(!$id){
                $id=Db::name("auth_rule")->insertGetId($save_data);
                $res=true;
            }else{
                $res=Db::name("auth_rule")->where(["id"=>$id])->update($save_data);
            }

            if($res){
                return $this->success("操作成功",["id"=>$id]);
            }else{
                return $this->error("11000","操作失败请重试");
            }
        }
    }

    /**
     * 删除规则
     */
    function del(){
        $id=input("post.id/d","");
        $return_data=$this->AuthModel->auth_id_all($id);
        $return_data[]=$id;
        $ids=implode(",",$return_data);
        $re=Db::name("auth_rule")->whereIn("id",$ids)->delete();
        return $this->success('操作成功');
    }
    /**
     * 权限获取
     * @return \think\response\Json
     */
    function get_auth_list(){
        $type=input("post.type/s","obj");
        $tree_list=$this->AuthModel->auth_list("obj",'',2);
        return $this->success("",["tree_list"=>$tree_list]);
    }
    function group_index(){
        return View::fetch();
    }
    function group_info(){
        return View::fetch();
    }
    function group_add(){
        $id=input("post.id/d","");
        $title=input("post.title/s","");
        $title=input("post.rules/s","");
    }

}